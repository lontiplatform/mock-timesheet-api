{
    "comments": "This service lists the attendance of a certain user within the given period.",
    "input": [
        {
            "name": "userId"
        },
        {
            "name": "startDate",
            "type": "date"
        },
        {
            "name": "endDate",
            "type": "date"
        }
    ],
    "output": [
        {
            "name": "attendance",
            "type": "model",
            "array": true,
            "reference": "io.toro.mock.timesheet.model.attendance.Attendance",
            "gloopProperties": [
                {
                    "name": "id"
                },
                {
                    "name": "userId"
                }
            ]
        },
        {
            "name": "error",
            "type": "model",
            "reference": "io.toro.mock.timesheet.model.APIResponse"
        },
        {
            "name": "responseCode",
            "type": "integer"
        }
    ],
    "steps": [
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "comments": "map the default dates if none provided",
                    "lines": [
                        {
                            "type": "set",
                            "expression": "startDate == null ? 0 : startDate",
                            "evaluate": true,
                            "to": [
                                "startDate"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "endDate == null ? System.currentTimeMillis() : endDate",
                            "evaluate": true,
                            "to": [
                                "endDate"
                            ]
                        }
                    ]
                },
                {
                    "type": "invokeGloop",
                    "comments": "fetch the user attendance from the database",
                    "name": "io.toro.mock.timesheet.sql.attendance.SelectAllUserAttendanceInPeriod",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "attendanceCursor",
                                    "type": "model",
                                    "array": true,
                                    "gloopProperties": [
                                        {
                                            "name": "ID",
                                            "required": true,
                                            "allowNull": false
                                        },
                                        {
                                            "name": "USER_ID",
                                            "required": true,
                                            "allowNull": false
                                        },
                                        {
                                            "name": "TYPE",
                                            "required": true,
                                            "allowNull": false
                                        },
                                        {
                                            "name": "RECORD_TIMESTAMP",
                                            "type": "date",
                                            "required": true
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "inputs": [
                        {
                            "from": [
                                "userId"
                            ],
                            "to": [
                                "selectAllUserAttendanceInPeriodInput",
                                "userid"
                            ]
                        },
                        {
                            "from": [
                                "startDate"
                            ],
                            "to": [
                                "selectAllUserAttendanceInPeriodInput",
                                "startDate"
                            ]
                        },
                        {
                            "from": [
                                "endDate"
                            ],
                            "to": [
                                "selectAllUserAttendanceInPeriodInput",
                                "endDate"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "selectAllUserAttendanceInPeriodInputCursor"
                            ],
                            "to": [
                                "attendanceCursor"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "200",
                            "to": [
                                "responseCode"
                            ]
                        }
                    ]
                },
                {
                    "type": "iterate",
                    "comments": "map the attendance cursor to the output",
                    "input": {
                        "path": [
                            "attendanceCursor"
                        ]
                    },
                    "output": {
                        "path": [
                            "attendance"
                        ]
                    },
                    "children": [
                        {
                            "comments": "map the data from the cursor to the output model",
                            "lines": [
                                {
                                    "from": [
                                        "attendanceCursor",
                                        "ID"
                                    ],
                                    "to": [
                                        "attendance",
                                        "id"
                                    ]
                                },
                                {
                                    "from": [
                                        "attendanceCursor",
                                        "TYPE"
                                    ],
                                    "to": [
                                        "attendance",
                                        "type"
                                    ]
                                },
                                {
                                    "from": [
                                        "attendanceCursor",
                                        "RECORD_TIMESTAMP"
                                    ],
                                    "to": [
                                        "attendance",
                                        "timestamp"
                                    ]
                                },
                                {
                                    "from": [
                                        "attendanceCursor",
                                        "USER_ID"
                                    ],
                                    "to": [
                                        "attendance",
                                        "userId"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "invokeCode",
                    "comments": "log the exception received",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "error",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.Throwable"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "$gloopException",
                                "gloopStackTrace"
                            ],
                            "to": [
                                "message"
                            ]
                        },
                        {
                            "from": [
                                "$gloopException",
                                "realException"
                            ],
                            "to": [
                                "throwable"
                            ]
                        }
                    ]
                },
                {
                    "comments": "map the appropriate error response",
                    "lines": [
                        {
                            "from": [
                                "$gloopException",
                                "message"
                            ],
                            "to": [
                                "error",
                                "message"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "responseCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "ERROR",
                            "to": [
                                "error",
                                "result"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}