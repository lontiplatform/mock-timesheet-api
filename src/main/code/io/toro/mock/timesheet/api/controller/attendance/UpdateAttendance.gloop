{
    "input": [
        {
            "name": "id"
        },
        {
            "name": "attendance",
            "type": "model",
            "reference": "io.toro.mock.timesheet.model.attendance.Attendance"
        }
    ],
    "output": [
        {
            "name": "response",
            "type": "model",
            "reference": "io.toro.mock.timesheet.model.APIResponse",
            "gloopProperties": [
                {
                    "name": "attendance",
                    "type": "model",
                    "reference": "io.toro.mock.timesheet.model.attendance.Attendance",
                    "gloopProperties": [
                        {
                            "name": "id"
                        },
                        {
                            "name": "userId"
                        }
                    ]
                }
            ]
        },
        {
            "name": "responseCode",
            "type": "integer"
        },
        {
            "name": "APIException",
            "type": "model",
            "reference": "io.toro.martini.api.APIException"
        }
    ],
    "steps": [
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "type": "invokeGloop",
                    "name": "io.toro.mock.timesheet.sql.attendance.SelectAttendance",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "selectAttendanceOutput",
                                    "type": "model",
                                    "gloopProperties": [
                                        {
                                            "name": "ID",
                                            "required": true,
                                            "allowNull": false
                                        },
                                        {
                                            "name": "USER_ID",
                                            "required": true,
                                            "allowNull": false
                                        },
                                        {
                                            "name": "TYPE",
                                            "required": true,
                                            "allowNull": false
                                        },
                                        {
                                            "name": "RECORD_TIMESTAMP",
                                            "type": "date",
                                            "required": true
                                        }
                                    ]
                                },
                                {
                                    "name": "attendanceFound",
                                    "type": "boolean"
                                }
                            ]
                        }
                    ],
                    "inputs": [
                        {
                            "from": [
                                "id"
                            ],
                            "to": [
                                "selectAttendanceInput",
                                "id"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "selectAttendanceOutput"
                            ],
                            "to": [
                                "selectAttendanceOutput"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "selectAttendanceOutput?.ID != null",
                            "evaluate": true,
                            "to": [
                                "attendanceFound"
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "expression": "attendanceFound",
                    "children": [
                        {
                            "type": "block",
                            "label": "true",
                            "children": [
                                {
                                    "type": "invokeGloop",
                                    "comments": "update the attendance in the database",
                                    "name": "io.toro.mock.timesheet.sql.attendance.UpdateAttendance",
                                    "declare": [
                                        {
                                            "variables": [
                                                {
                                                    "name": "updateCount",
                                                    "type": "integer"
                                                }
                                            ]
                                        }
                                    ],
                                    "inputs": [
                                        {
                                            "from": [
                                                "id"
                                            ],
                                            "to": [
                                                "updateAttendanceInput",
                                                "id"
                                            ]
                                        },
                                        {
                                            "from": [
                                                "attendance",
                                                "type"
                                            ],
                                            "to": [
                                                "updateAttendanceInput",
                                                "type"
                                            ]
                                        },
                                        {
                                            "from": [
                                                "attendance",
                                                "timestamp"
                                            ],
                                            "to": [
                                                "updateAttendanceInput",
                                                "recordTimestamp"
                                            ]
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "type": "set",
                                            "expression": "SUCCESS",
                                            "to": [
                                                "response",
                                                "result"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "\"Successfully updated attendance with id: ${id}\"",
                                            "evaluate": true,
                                            "to": [
                                                "response",
                                                "message"
                                            ]
                                        },
                                        {
                                            "from": [
                                                "updateCount"
                                            ],
                                            "to": [
                                                "updateCount"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "fork",
                                    "expression": "updateCount > 0",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "true",
                                            "children": [
                                                {
                                                    "type": "invokeGloop",
                                                    "name": "io.toro.mock.timesheet.sql.attendance.SelectAttendance",
                                                    "inputs": [
                                                        {
                                                            "from": [
                                                                "id"
                                                            ],
                                                            "to": [
                                                                "selectAttendanceInput",
                                                                "id"
                                                            ]
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "from": [
                                                                "selectAttendanceOutput"
                                                            ],
                                                            "to": [
                                                                "selectAttendanceOutput"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "lines": [
                                                        {
                                                            "type": "set",
                                                            "expression": "SUCCESS",
                                                            "to": [
                                                                "response",
                                                                "result"
                                                            ]
                                                        },
                                                        {
                                                            "type": "set",
                                                            "expression": "Attendance successfully updated.",
                                                            "to": [
                                                                "response",
                                                                "message"
                                                            ]
                                                        },
                                                        {
                                                            "from": [
                                                                "id"
                                                            ],
                                                            "to": [
                                                                "response",
                                                                "attendance",
                                                                "id"
                                                            ]
                                                        },
                                                        {
                                                            "type": "set",
                                                            "expression": "200",
                                                            "to": [
                                                                "responseCode"
                                                            ]
                                                        },
                                                        {
                                                            "from": [
                                                                "selectAttendanceOutput",
                                                                "USER_ID"
                                                            ],
                                                            "to": [
                                                                "response",
                                                                "attendance",
                                                                "userId"
                                                            ]
                                                        },
                                                        {
                                                            "from": [
                                                                "selectAttendanceOutput",
                                                                "TYPE"
                                                            ],
                                                            "to": [
                                                                "response",
                                                                "attendance",
                                                                "type"
                                                            ]
                                                        },
                                                        {
                                                            "from": [
                                                                "selectAttendanceOutput",
                                                                "RECORD_TIMESTAMP"
                                                            ],
                                                            "to": [
                                                                "response",
                                                                "attendance",
                                                                "timestamp"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "label": "false",
                            "lines": [
                                {
                                    "type": "set",
                                    "expression": "ERROR",
                                    "to": [
                                        "APIException",
                                        "result"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "404",
                                    "to": [
                                        "APIException",
                                        "httpErrorCode"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "\"Attendance with id ${id} not found.\"",
                                    "evaluate": true,
                                    "to": [
                                        "APIException",
                                        "message"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "404",
                                    "to": [
                                        "responseCode"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "invokeCode",
                    "comments": "log the exception received",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "error",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.Throwable"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "$gloopException",
                                "gloopStackTrace"
                            ],
                            "to": [
                                "message"
                            ]
                        },
                        {
                            "from": [
                                "$gloopException",
                                "realException"
                            ],
                            "to": [
                                "throwable"
                            ]
                        }
                    ]
                },
                {
                    "comments": "map the appropriate error response",
                    "lines": [
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "responseCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "ERROR",
                            "to": [
                                "APIException",
                                "result"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "APIException",
                                "httpErrorCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "Encountered an exception while processing the request.",
                            "to": [
                                "APIException",
                                "message"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}