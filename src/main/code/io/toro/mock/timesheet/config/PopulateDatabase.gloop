{
    "comments": "This service populates the database with mock data.",
    "steps": [
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "comments": "represent the data in the mock users file as a model",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "users",
                                    "type": "model",
                                    "array": true,
                                    "allowExtraProperties": true,
                                    "gloopProperties": [
                                        {
                                            "name": "id"
                                        },
                                        {
                                            "name": "name"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "invokeCode",
                    "comments": "fetch the contents of the mock users file as an input stream",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "inputStream",
                                    "type": "object",
                                    "objectClassName": "java.io.InputStream"
                                }
                            ]
                        }
                    ],
                    "className": "io.toro.martini.FileMethods",
                    "methodName": "resourceStream",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.String",
                        "io.toro.gloop.engine.GloopExecutionContext"
                    ],
                    "inputs": [
                        {
                            "type": "set",
                            "expression": "resources/mock_users.csv",
                            "to": [
                                "resource"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "output"
                            ],
                            "to": [
                                "inputStream"
                            ]
                        }
                    ]
                },
                {
                    "type": "invokeCode",
                    "comments": "map the contents to the users model that was previously declared",
                    "unload": [
                        [
                            "inputStream"
                        ]
                    ],
                    "className": "io.toro.martini.FlatFileMethods",
                    "methodName": "getDelimitedFileInputCursor",
                    "parameters": [
                        "java.io.InputStream",
                        "java.lang.String",
                        "char",
                        "java.lang.Character",
                        "java.lang.Character",
                        "java.lang.Character",
                        "int",
                        "boolean",
                        "boolean",
                        "boolean",
                        "java.lang.String",
                        "java.lang.String",
                        "io.toro.gloop.object.property.GloopModel",
                        "java.lang.String[]",
                        "java.lang.String",
                        "io.toro.gloop.engine.GloopExecutionContext"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "inputStream"
                            ],
                            "to": [
                                "flatFileData"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "users.keySet()",
                            "evaluate": true,
                            "to": [
                                "fieldNames"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "output"
                            ],
                            "to": [
                                "users"
                            ]
                        }
                    ]
                },
                {
                    "type": "invokeCode",
                    "comments": "inform the user that users will be populated",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "info",
                    "parameters": [
                        "java.lang.String"
                    ],
                    "inputs": [
                        {
                            "type": "set",
                            "expression": "Inserting dummy data into users table...",
                            "to": [
                                "message"
                            ]
                        }
                    ]
                },
                {
                    "type": "iterate",
                    "comments": "populate the database with mock users data",
                    "input": {
                        "path": [
                            "users"
                        ]
                    },
                    "children": [
                        {
                            "type": "invokeCode",
                            "comments": "log the user information for debugging purposes",
                            "className": "io.toro.martini.LoggerMethods",
                            "methodName": "println",
                            "parameters": [
                                "java.lang.String"
                            ],
                            "inputs": [
                                {
                                    "type": "set",
                                    "expression": "users.asJson()",
                                    "evaluate": true,
                                    "to": [
                                        "message"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "invokeGloop",
                            "comments": "insert the user to the database",
                            "name": "io.toro.mock.timesheet.sql.user.InsertUser",
                            "inputs": [
                                {
                                    "from": [
                                        "users",
                                        "id"
                                    ],
                                    "to": [
                                        "insertUserInput",
                                        "id"
                                    ]
                                },
                                {
                                    "from": [
                                        "users",
                                        "name"
                                    ],
                                    "to": [
                                        "insertUserInput",
                                        "name"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "comments": "represent the data in the mock attendance file as a model",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "attendance",
                                    "type": "model",
                                    "array": true,
                                    "allowExtraProperties": true,
                                    "gloopProperties": [
                                        {
                                            "name": "id"
                                        },
                                        {
                                            "name": "userId"
                                        },
                                        {
                                            "name": "type"
                                        },
                                        {
                                            "name": "timestamp",
                                            "type": "date"
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "unload": [
                        [
                            "users"
                        ]
                    ]
                },
                {
                    "type": "invokeCode",
                    "comments": "fetch the contents of the mock attendance file as an input stream",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "inputStream",
                                    "type": "object",
                                    "objectClassName": "java.io.InputStream"
                                }
                            ]
                        }
                    ],
                    "className": "io.toro.martini.FileMethods",
                    "methodName": "resourceStream",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.String",
                        "io.toro.gloop.engine.GloopExecutionContext"
                    ],
                    "inputs": [
                        {
                            "type": "set",
                            "expression": "resources/mock_attendance.csv",
                            "to": [
                                "resource"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "output"
                            ],
                            "to": [
                                "inputStream"
                            ]
                        }
                    ]
                },
                {
                    "type": "invokeCode",
                    "comments": "map the contents to the attendance model that was previously declared",
                    "className": "io.toro.martini.FlatFileMethods",
                    "methodName": "getDelimitedFileInputCursor",
                    "parameters": [
                        "java.io.InputStream",
                        "java.lang.String",
                        "char",
                        "java.lang.Character",
                        "java.lang.Character",
                        "java.lang.Character",
                        "int",
                        "boolean",
                        "boolean",
                        "boolean",
                        "java.lang.String",
                        "java.lang.String",
                        "io.toro.gloop.object.property.GloopModel",
                        "java.lang.String[]",
                        "java.lang.String",
                        "io.toro.gloop.engine.GloopExecutionContext"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "inputStream"
                            ],
                            "to": [
                                "flatFileData"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "attendance.keySet()",
                            "evaluate": true,
                            "to": [
                                "fieldNames"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "output"
                            ],
                            "to": [
                                "attendance"
                            ]
                        }
                    ]
                },
                {
                    "type": "invokeCode",
                    "comments": "inform the user that attendance will be populated",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "info",
                    "parameters": [
                        "java.lang.String"
                    ],
                    "inputs": [
                        {
                            "type": "set",
                            "expression": "Inserting dummy data into attendance table...",
                            "to": [
                                "message"
                            ]
                        }
                    ]
                },
                {
                    "type": "iterate",
                    "comments": "populate the database with mock attendance data",
                    "input": {
                        "path": [
                            "attendance"
                        ]
                    },
                    "children": [
                        {
                            "type": "invokeCode",
                            "comments": "log the attendance data for debugging purposes",
                            "className": "io.toro.martini.LoggerMethods",
                            "methodName": "println",
                            "parameters": [
                                "java.lang.String"
                            ],
                            "inputs": [
                                {
                                    "type": "set",
                                    "expression": "attendance.asJson()",
                                    "evaluate": true,
                                    "to": [
                                        "message"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "invokeGloop",
                            "comments": "insert the attendance to the database",
                            "name": "io.toro.mock.timesheet.sql.attendance.InsertAttendance",
                            "inputs": [
                                {
                                    "from": [
                                        "attendance",
                                        "id"
                                    ],
                                    "to": [
                                        "insertAttendanceInput",
                                        "id"
                                    ]
                                },
                                {
                                    "from": [
                                        "attendance",
                                        "type"
                                    ],
                                    "to": [
                                        "insertAttendanceInput",
                                        "type"
                                    ]
                                },
                                {
                                    "from": [
                                        "attendance",
                                        "timestamp"
                                    ],
                                    "to": [
                                        "insertAttendanceInput",
                                        "recordTimestamp"
                                    ]
                                },
                                {
                                    "from": [
                                        "attendance",
                                        "userId"
                                    ],
                                    "to": [
                                        "insertAttendanceInput",
                                        "userId"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "invokeCode",
                    "comments": "log the exception received",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "error",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.Throwable"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "$gloopException",
                                "gloopStackTrace"
                            ],
                            "to": [
                                "message"
                            ]
                        },
                        {
                            "from": [
                                "$gloopException",
                                "realException"
                            ],
                            "to": [
                                "throwable"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}